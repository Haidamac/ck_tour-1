---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/accommodations":
    get:
      summary: list published accommodation for all
      tags:
      - Accommodation
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: check_in
        in: query
        schema:
          type: string
        description: Date of check in
      - name: check_out
        in: query
        schema:
          type: string
        description: Date of check in
      - name: number_of_peoples
        in: query
        schema:
          type: integer
        description: Number of peoples
      - name: user_id
        in: query
        schema:
          type: integer
        description: Filter on partner
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create new accommodation - for partner only
      tags:
      - Partner
      description: Creates a new accommodation
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address_owner:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                kind:
                  type: string
                user_id:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
              required:
              - name
              - description
              - address_owner
              - phone
              - email
              - kind
              - user_id
              - reg_code
              - person
        required: true
  "/api/v1/accommodations/{id}":
    parameters:
    - name: id
      in: path
      description: accommodation id
      required: true
      schema:
        type: string
    get:
      summary: show published accommodation for all
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update accommodation - for admin all, for partner his own only
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address_owner:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                kind:
                  type: string
                user_id:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
    delete:
      summary: delete accommodation - for admin all, for partner his own only
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{id}/publish":
    parameters:
    - name: id
      in: path
      description: accommodation id
      required: true
      schema:
        type: string
    put:
      summary: publish accommodation - for admin only
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{id}/unpublish":
    parameters:
    - name: id
      in: path
      description: accommodation id
      required: true
      schema:
        type: string
    put:
      summary: unpublish accommodation - for admin only
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations_unpublished":
    get:
      summary: list unpublished (for admin - all, for partner - his own only)
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{id}/show_unpublished":
    parameters:
    - name: id
      in: path
      description: accommodation id
      required: true
      schema:
        type: string
    get:
      summary: list unpublished (for admin - all, for partner - his own only)
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/admins/create_admin":
    post:
      summary: create admin
      tags:
      - Admin
      description: Creates a new admin
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/amenities":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    get:
      summary: list amenities
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create amenity - for partner only
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/amenities/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: amenity_id
      required: true
      schema:
        type: string
    put:
      summary: update amenity - for partner only
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
    delete:
      summary: delete amenity - for partner only
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{id}/appointments":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list tour appointment for tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old appointments
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create tour appointment by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                tour_id:
                  type: integer
              required:
              - number_of_peoples
              - tour_id
        required: true
  "/api/v1/users/{user_id}/appointments/{id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: appointment id
      required: true
      schema:
        type: string
    get:
      summary: show tour appointment for tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update tour appointment by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
    delete:
      summary: delete tour appointment by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{tour_id}/appointments/{id}/confirm":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: appointment id
      required: true
      schema:
        type: string
    put:
      summary: confirmations of tour appointment for partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{tour_id}/appointments/{id}/cancel":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: appointment id
      required: true
      schema:
        type: string
    put:
      summary: cancelling of tour appointment for partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{tour_id}/appointments":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    get:
      summary: list appointments of tour for partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old appointments
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/attractions":
    get:
      summary: list attractions for all
      tags:
      - Attraction
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create attraction by admin
      tags:
      - Admin
      description: Creates a new attraction
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
              required:
              - title
              - description
        required: true
  "/api/v1/attractions/{id}":
    parameters:
    - name: id
      in: path
      description: attraction id
      required: true
      schema:
        type: string
    get:
      summary: show attraction for all
      tags:
      - Attraction
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update attraction by admin
      tags:
      - Admin
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
    delete:
      summary: delete attraction by admin
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/search":
    get:
      summary: search attraction for all
      tags:
      - Attraction
      parameters:
      - name: req
        in: query
        schema:
          type: string
        description: Search attractions by phrase in title, description or locality
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/attractions/{attraction_id}/upload_image":
    post:
      summary: upload image of attraction by admin
      parameters:
      - name: attraction_id
        in: path
        description: attraction id
        required: true
        schema:
          type: string
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: Image uploaded successfully
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        description: Image file to upload
  "/api/v1/attractions/{attraction_id}/update_image":
    put:
      summary: update image by admin
      parameters:
      - name: attraction_id
        in: path
        description: attraction id
        required: true
        schema:
          type: string
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: Image updated successfully
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        description: Image file to upload
  "/api/v1/auth/login":
    post:
      summary: authentication user
      tags:
      - Authentication
      description: authentication user
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
        required: true
  "/api/v1/users/{id}/bookings":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list booking for tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old bookings
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create booking by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                note:
                  type: string
                room_id:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
              - room_id
        required: true
  "/api/v1/users/{user_id}/bookings/{id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: booking id
      required: true
      schema:
        type: string
    get:
      summary: show booking for tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update booking by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                note:
                  type: string
    delete:
      summary: delete booking by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/bookings/{id}/confirm":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: booking id
      required: true
      schema:
        type: string
    put:
      summary: confirmations of accommodation booking by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/bookings/{id}/cancel":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: booking id
      required: true
      schema:
        type: string
    put:
      summary: cancelling of accommodation booking by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/bookings":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    get:
      summary: list bookings for partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old bookings
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings":
    get:
      summary: list published catering for all
      tags:
      - Catering
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: user_id
        in: query
        schema:
          type: integer
        description: Filter on partner
      - name: check_in
        in: query
        schema:
          type: string
        description: Guests Check-in f.e. 2023-05-15-18-00
      - name: check_out
        in: query
        schema:
          type: string
        description: Guests Check-out f.e. 2023-05-15-21-00
      - name: number_of_peoples
        in: query
        schema:
          type: string
        description: Guests quantity
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create new catering - for partner only
      tags:
      - Partner
      description: Creates a new catering
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                places:
                  type: integer
                kind:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                user_id:
                  type: string
              required:
              - name
              - description
              - places
              - address_owner
              - phone
              - email
              - kind
              - user_id
              - reg_code
              - person
        required: true
  "/api/v1/caterings/{id}":
    parameters:
    - name: id
      in: path
      description: catering id
      required: true
      schema:
        type: string
    get:
      summary: show published catering for all
      tags:
      - Catering
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update catering - for admin all, for partner his own only
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                places:
                  type: integer
                kind:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                user_id:
                  type: string
    delete:
      summary: delete catering - for admin all, for partner his own only
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{id}/publish":
    parameters:
    - name: id
      in: path
      description: catering id
      required: true
      schema:
        type: string
    put:
      summary: publish catering - for admin only
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{id}/unpublish":
    parameters:
    - name: id
      in: path
      description: catering id
      required: true
      schema:
        type: string
    put:
      summary: unpublish catering - for admin only
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings_unpublished":
    get:
      summary: list unpublished (for admin - all, for partner - his own only)
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{id}/show_unpublished":
    parameters:
    - name: id
      in: path
      description: catering id
      required: true
      schema:
        type: string
    get:
      summary: list unpublished (for admin - all, for partner - his own only)
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/facilities":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    get:
      summary: list facilities for all
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create facility for accommodation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
        required: true
  "/api/v1/accommodations/{accommodation_id}/facilities/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: facility_id
      required: true
      schema:
        type: string
    put:
      summary: update facility of accommodation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
    delete:
      summary: delete facility of accommodation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/{parentable_type}/{parentable_id}/geolocations":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attractions_id, accommodations_id
      required: true
      schema:
        type: string
    post:
      summary: create geolocation by admin (attraction) or partner (catering/tour)
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
              required:
              - locality
              - latitude
              - longitude
        required: true
    get:
      summary: show geolocation for all
      tags:
      - Map
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update geolocation by admin or partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
    delete:
      summary: delete geolocation by admin or partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{tour_id}/places/{place_id}/geolocations":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    - name: place_id
      in: path
      description: place id
      required: true
      schema:
        type: string
    post:
      summary: create geolocation for tour by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
              required:
              - locality
              - latitude
              - longitude
        required: true
    get:
      summary: show geolocation for tour for all
      tags:
      - Map
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update geolocation for tour by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
    delete:
      summary: delete geolocation for tour by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/password/forgot":
    post:
      summary: forgot password
      tags:
      - Authentication
      description: forgot users password
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
        required: true
  "/api/v1/password/reset":
    post:
      summary: reset password
      tags:
      - Authentication
      description: reset password
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/tours/{tour_id}/places":
    parameters:
    - name: tour_id
      in: path
      description: tour_id
      required: true
      schema:
        type: string
    get:
      summary: list places of tour for all
      tags:
      - Tour
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create place for tour by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                body:
                  type: string
              required:
              - name
              - body
        required: true
  "/api/v1/tours/{tour_id}/places/{id}":
    parameters:
    - name: tour_id
      in: path
      description: tour_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: place_id
      required: true
      schema:
        type: string
    get:
      summary: show place of tour for all
      tags:
      - Tour
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update place of tour by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                body:
                  type: string
    delete:
      summary: delete place of tour by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{id}/reservations":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list reservation for tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old reservations
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create reservation by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: datetime
                check_out:
                  type: string
                  format: datetime
                note:
                  type: string
                catering_id:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
              - catering_id
        required: true
  "/api/v1/users/{user_id}/reservations/{id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: reservation id
      required: true
      schema:
        type: string
    get:
      summary: show reservation for tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update reservation by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: datetime
                check_out:
                  type: string
                  format: datetime
                note:
                  type: string
    delete:
      summary: delete reservation by tourist
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{catering_id}/reservations/{id}/confirm":
    parameters:
    - name: catering_id
      in: path
      description: catering_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: reservation id
      required: true
      schema:
        type: string
    put:
      summary: confirmations of catering reservation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{catering_id}/reservations/{id}/cancel":
    parameters:
    - name: catering_id
      in: path
      description: catering_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: reservation id
      required: true
      schema:
        type: string
    put:
      summary: cancelling of catering reservation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{catering_id}/reservations":
    parameters:
    - name: catering_id
      in: path
      description: catering_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations for partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old reservations
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/rooms":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    get:
      summary: list rooms of accommodation for all
      tags:
      - Accommodation
      parameters:
      - name: check_in
        in: query
        schema:
          type: string
        description: Guests Check-in f.e. 2023-05-15
      - name: check_out
        in: query
        schema:
          type: string
        description: Guests Check-out f.e. 2023-05-17
      - name: number_of_peoples
        in: query
        schema:
          type: string
        description: Guests quantity
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create room of accommodation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
              required:
              - name
              - places
              - bed
              - description
              - quantity
              - price_per_night
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    get:
      summary: show room of accommodation for all
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update room of accommodation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
    delete:
      summary: delete room of accommodation by partner
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours":
    get:
      summary: list published tour for all
      tags:
      - Tour
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: user_id
        in: query
        schema:
          type: integer
        description: Filter on partner
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old tours
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create new tour - for partner only
      tags:
      - Partner
      description: Creates a new tour
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                seats:
                  type: integer
                price_per_one:
                  type: decimal
                time_start:
                  type: string
                time_end:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                user_id:
                  type: string
              required:
              - title
              - description
              - seats
              - address_owner
              - phone
              - email
              - price_per_one
              - user_id
              - reg_code
              - person
              - time_start
              - time_end
        required: true
  "/api/v1/tours/{id}":
    parameters:
    - name: id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    get:
      summary: show published tour for all
      tags:
      - Tour
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update tour - for admin all, for partner his own only
      tags:
      - Partner
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                seats:
                  type: integer
                price_per_one:
                  type: decimal
                time_start:
                  type: string
                time_end:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                user_id:
                  type: string
    delete:
      summary: delete tour - for admin all, for partner his own only
      tags:
      - Partner
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{id}/publish":
    parameters:
    - name: id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    put:
      summary: publish tour - for admin only
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{id}/unpublish":
    parameters:
    - name: id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    put:
      summary: unpublish tour - for admin only
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours_unpublished":
    get:
      summary: list unpublished (for admin - all, for partner - his own only)
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{id}/show_unpublished":
    parameters:
    - name: id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    get:
      summary: list unpublished (for admin - all, for partner - his own only)
      tags:
      - Admin
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Admin
      security:
      - jwt_auth: []
      parameters:
      - name: role
        in: query
        schema:
          type: string
        description: admin/partner/tourist
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create user
      tags:
      - Tourist
      description: Creates a new user
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - User
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update user
      tags:
      - User
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
    delete:
      summary: delete user
      tags:
      - User
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{id}/change_role":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    put:
      summary: change_role
      tags:
      - Tourist
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
- url: http://{ck_tour_Host}
  variables:
    ck_tour_Host:
      default: 164.92.135.103
components:
  securitySchemes:
    jwt_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
