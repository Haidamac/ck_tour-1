---
openapi: 3.0.1
info:
  title: API V1
  version: v1
tags:
- name: Users
  description: User operating for all roles
- name: Users Tourist
  description: User operating for tourist
- name: Users Admin
  description: User operating for admin
- name: Attraction
  description: Views of attractions for all
- name: Admin Attractions
  description: operate with attractions by admin
- name: Accommodation
  description: Views of accommodations for all
- name: Partner Accommodations
  description: operate with accommodations by partner
- name: Tourist Accommodations
  description: operate with accommodations by tourist
- name: Catering
  description: Views of caterings for all
- name: Partner Caterings
  description: operate with caterings by partner
- name: Tourist Caterings
  description: operate with caterings by tourist
- name: Tour
  description: Views of tours for all
- name: Partner Tours
  description: operate with tours by partner
- name: Tourist Tours
  description: operate with tours by tourist
- name: Map
  description: operate with maps
- name: Comment
  description: operate with user's comments
- name: Rate
  description: operate with user's rates
paths:
  "/api/v1/accommodations":
    get:
      summary: list ACCOMMODATION - published for all, unpublished for admin, his
        own for partner
      tags:
      - Accommodation
      security:
      - jwt_auth: []
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: check_in
        in: query
        schema:
          type: string
        description: Date of check in
      - name: check_out
        in: query
        schema:
          type: string
        description: Date of check in
      - name: number_of_peoples
        in: query
        schema:
          type: integer
        description: Number of peoples
      - name: user_id
        in: query
        schema:
          type: integer
        description: Filter on partner
      - name: status
        in: query
        schema:
          type: string
        description: 'Filter on status: unpublished/published'
      responses:
        '200':
          description: successful
    post:
      summary: create new ACCOMMODATION - for partner only
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address_owner:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                kind:
                  type: string
                user_id:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - name
              - description
              - address_owner
              - phone
              - email
              - kind
              - user_id
              - reg_code
              - person
        required: true
  "/api/v1/accommodations/{id}":
    parameters:
    - name: id
      in: path
      description: accommodation id
      required: true
      schema:
        type: string
    get:
      summary: show ACCOMMODATION published - for all, unpublished for admin, his
        own for partner
      tags:
      - Accommodation
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: 'update ACCOMMODATION: status by admin: published/unpublished , other
        attr. by partner his own only'
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address_owner:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                kind:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                status:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
    delete:
      summary: delete ACCOMMODATION - for admin all, for partner his own only
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      responses:
        '200':
          description: ok
        '401':
          description: unauthorized
        '404':
          description: not found
  "/api/v1/admins/create_admin":
    post:
      summary: create admin
      tags:
      - Users Admin
      description: Creates a new admin
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
  "/api/v1/admins/unpublished_comments":
    get:
      summary: list unpublished comments for admin only
      tags:
      - Comment
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/amenities":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    get:
      summary: list amenities of room
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create amenity of room - for partner only
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/amenities/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: amenity_id
      required: true
      schema:
        type: string
    put:
      summary: update amenity of room - for partner only
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
    delete:
      summary: delete amenity of room - for partner only
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{id}/appointments":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list TOUR APPOINTMENT for tourist
      tags:
      - Tourist Tours
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old appointments
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{user_id}/appointments/{id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: appointment id
      required: true
      schema:
        type: string
    get:
      summary: show TOUR APPOINTMENT for tourist
      tags:
      - Tourist Tours
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: 'update TOUR APPOINTMENT: confirmation (approved/cancelled) - partner
        only, other attr. by tourist'
      tags:
      - Tourist Tours
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                note:
                  type: string
                phone:
                  type: string
                full_name:
                  type: string
                confirmation:
                  type: string
    delete:
      summary: delete TOUR APPOINTMENT by tourist
      tags:
      - Tourist Tours
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{tour_id}/appointments":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    get:
      summary: list TOUR APPOINTMENT for partner
      tags:
      - Partner Tours
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old appointments
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create TOUR APPOINTMENT by tourist
      tags:
      - Tourist Tours
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                note:
                  type: string
                phone:
                  type: string
                full_name:
                  type: string
                tour_id:
                  type: integer
              required:
              - number_of_peoples
              - tour_id
        required: true
  "/api/v1/attractions":
    get:
      summary: list attractions for all
      tags:
      - Attraction
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: search
        in: query
        schema:
          type: string
        description: Search
      responses:
        '200':
          description: successful
    post:
      summary: create attraction by admin
      tags:
      - Admin Attractions
      description: Creates a new attraction
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                image:
                  type: file
              required:
              - title
              - description
              - image
        required: true
  "/api/v1/attractions/{id}":
    parameters:
    - name: id
      in: path
      description: attraction id
      required: true
      schema:
        type: string
    get:
      summary: show attraction for all
      tags:
      - Attraction
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: update attraction by admin
      tags:
      - Admin Attractions
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                image:
                  type: file
    delete:
      summary: delete attraction by admin
      tags:
      - Admin Attractions
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
  "/api/v1/auth/login":
    post:
      summary: authentication user
      tags:
      - Users
      description: authentication user
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
        required: true
  "/api/v1/billing_portals":
    post:
      summary: billing portal for authenticated user
      tags:
      - Billing portal
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{id}/bookings":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list ACCOMMODATION BOOKING for tourist
      tags:
      - Tourist Accommodations
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old bookings
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{user_id}/bookings/{id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: booking id
      required: true
      schema:
        type: string
    get:
      summary: show ACCOMMODATION BOOKING for tourist
      tags:
      - Tourist Accommodations
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: 'update ACCOMMODATION BOOKING: confirmation (approved/cancelled) -
        partner only, other attr. by tourist'
      tags:
      - Tourist Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                note:
                  type: string
                phone:
                  type: string
                full_name:
                  type: string
                confirmation:
                  type: string
    delete:
      summary: delete ACCOMMODATION BOOKING by tourist
      tags:
      - Tourist Accommodations
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/bookings":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    get:
      summary: list ACCOMMODATION BOOKING for partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old bookings
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create ACCOMMODATION BOOKING by tourist
      tags:
      - Tourist Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                note:
                  type: string
                phone:
                  type: string
                full_name:
                  type: string
                room_id:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
              - room_id
        required: true
  "/api/v1/caterings":
    get:
      summary: list CATERING - published for all
      tags:
      - Catering
      security:
      - jwt_auth: []
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: user_id
        in: query
        schema:
          type: integer
        description: Filter on partner
      - name: status
        in: query
        schema:
          type: string
        description: 'Filter on status: unpublished/published'
      - name: check_in
        in: query
        schema:
          type: string
        description: Guests Check-in f.e. 2023-05-15-18-00
      - name: check_out
        in: query
        schema:
          type: string
        description: Guests Check-out f.e. 2023-05-15-21-00
      - name: number_of_peoples
        in: query
        schema:
          type: string
        description: Guests quantity
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create new CATERING - for partner only
      tags:
      - Partner Caterings
      description: Creates a new catering
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                places:
                  type: integer
                kind:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                user_id:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - name
              - description
              - places
              - address_owner
              - phone
              - email
              - kind
              - user_id
              - reg_code
              - person
        required: true
  "/api/v1/caterings/{id}":
    parameters:
    - name: id
      in: path
      description: catering id
      required: true
      schema:
        type: string
    get:
      summary: show CATERING - published for all
      tags:
      - Catering
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: 'update CATERING: status by admin: published/unpublished , other attr.
        by partner his own only'
      tags:
      - Partner Caterings
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                places:
                  type: integer
                kind:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                status:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
    delete:
      summary: delete CATERING - for admin all, for partner his own only
      tags:
      - Partner Caterings
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/{parentable_type}/{parentable_id}/comments":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations, catering, tour
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attraction_id, accommodation_id, catering_id, tour_id
      required: true
      schema:
        type: string
    get:
      summary: list comments - published for all, unpublished for admin, his own for
        partner/tourist
      tags:
      - Comment
      security:
      - jwt_auth: []
      parameters:
      - name: status
        in: query
        schema:
          type: string
        description: 'Filter on status: unpublished/published'
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create comment by authenticated user
      tags:
      - Comment
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
              - body
        required: true
  "/api/v1/{parentable_type}/{parentable_id}/comments/{id}":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations, catering, tour
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attraction_id, accommodation_id, catering_id, tour_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: comment id
      required: true
      schema:
        type: string
    get:
      summary: show comment for all
      tags:
      - Comment
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update comment by admin or partner
      tags:
      - Comment
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
    delete:
      summary: delete comment by admin or partner
      tags:
      - Comment
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/accommodations/{accommodation_id}/facilities":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    get:
      summary: list facilities for all
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create facility for accommodation by partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
        required: true
  "/api/v1/accommodations/{accommodation_id}/facilities/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: facility_id
      required: true
      schema:
        type: string
    put:
      summary: update facility of accommodation by partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
    delete:
      summary: delete facility of accommodation by partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/geolocations":
    get:
      summary: list geolocations for all
      tags:
      - Map
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/{parentable_type}/{parentable_id}/geolocations":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attraction_id, accommodation_id
      required: true
      schema:
        type: string
    get:
      summary: list geolocations for all
      tags:
      - Map
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create geolocation by admin (attraction) or partner (catering/tour)
      tags:
      - Map
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
              required:
              - locality
              - latitude
              - longitude
        required: true
  "/api/v1/{parentable_type}/{parentable_id}/geolocations/{id}":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attraction_id, accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: geolocation id
      required: true
      schema:
        type: string
    get:
      summary: show geolocation for all
      tags:
      - Map
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update geolocation by admin or partner
      tags:
      - Map
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
    delete:
      summary: delete geolocation by admin or partner
      tags:
      - Map
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours/{tour_id}/places/{place_id}/geolocations":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    - name: place_id
      in: path
      description: place id
      required: true
      schema:
        type: string
    post:
      summary: create geolocation for tour by partner
      tags:
      - Map
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
              required:
              - locality
              - latitude
              - longitude
        required: true
  "/api/v1/tours/{tour_id}/places/{place_id}/geolocations/{id}":
    parameters:
    - name: tour_id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    - name: place_id
      in: path
      description: place id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: geolocation id
      required: true
      schema:
        type: string
    get:
      summary: show geolocation for tour for all
      tags:
      - Map
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update geolocation for tour by partner
      tags:
      - Map
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
                street:
                  type: string
                suite:
                  type: string
                zip_code:
                  type: string
    delete:
      summary: delete geolocation for tour by partner
      tags:
      - Map
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/password/forgot":
    post:
      summary: forgot password
      tags:
      - Users
      description: forgot users password
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
        required: true
  "/api/v1/password/reset":
    post:
      summary: reset password
      tags:
      - Users
      description: reset password
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                token:
                  type: string
              required:
              - email
              - password
              - token
        required: true
  "/api/v1/password/update":
    put:
      summary: update password
      tags:
      - Users
      description: update password
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
                confirm_password:
                  type: string
              required:
              - old_password
              - new_password
              - confirm_password
        required: true
  "/api/v1/tours/{tour_id}/places":
    parameters:
    - name: tour_id
      in: path
      description: tour_id
      required: true
      schema:
        type: string
    get:
      summary: list places of tour for all
      tags:
      - Tour
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
    post:
      summary: create place for tour by partner
      tags:
      - Partner Tours
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                body:
                  type: string
                image:
                  type: file
              required:
              - name
              - body
              - image
        required: true
  "/api/v1/tours/{tour_id}/places/{id}":
    parameters:
    - name: tour_id
      in: path
      description: tour_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: place_id
      required: true
      schema:
        type: string
    get:
      summary: show place of tour for all
      tags:
      - Tour
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: update place of tour by partner
      tags:
      - Partner Tours
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                body:
                  type: string
                image:
                  type: file
    delete:
      summary: delete place of tour by partner
      tags:
      - Partner Tours
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
  "/api/v1/plans":
    get:
      summary: plans for authenticated user
      tags:
      - Plans
      parameters:
      - name: token
        in: query
        description: Authorization token
        schema:
          type: string
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/{parentable_type}/{parentable_id}/rates":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations, caterings, tours
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attraction_id, accommodation_id, catering_id, tour_id
      required: true
      schema:
        type: string
    get:
      summary: averedge rate for all
      tags:
      - Rate
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create rate by authenticated user
      tags:
      - Rate
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
              required:
              - body
        required: true
  "/api/v1/{parentable_type}/{parentable_id}/rates/{id}":
    parameters:
    - name: parentable_type
      in: path
      description: f.e. attractions, accommodations, caterings, tours
      required: true
      schema:
        type: string
    - name: parentable_id
      in: path
      description: f.e. attraction_id, accommodation_id, catering_id, tour_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: rate id
      required: true
      schema:
        type: string
    get:
      summary: show rate for all
      tags:
      - Rate
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update rate by authenticated user or admin
      tags:
      - Rate
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
              required:
              - body
    delete:
      summary: delete rate by admin
      tags:
      - Rate
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{id}/reservations":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list CATERING RESERVATION for tourist
      tags:
      - Tourist Caterings
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old reservations
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/users/{user_id}/reservations/{id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: reservation id
      required: true
      schema:
        type: string
    get:
      summary: show CATERING RESERVATION for tourist
      tags:
      - Tourist Caterings
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: 'update CATERING RESERVATION: confirmation (approved/cancelled) - partner
        only, other attr. by tourist'
      tags:
      - Tourist Caterings
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: datetime
                check_out:
                  type: string
                  format: datetime
                note:
                  type: string
                phone:
                  type: string
                full_name:
                  type: string
                confirmation:
                  type: string
    delete:
      summary: delete CATERING RESERVATION by tourist
      tags:
      - Tourist Caterings
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/caterings/{catering_id}/reservations":
    parameters:
    - name: catering_id
      in: path
      description: catering_id
      required: true
      schema:
        type: string
    get:
      summary: list CATERING RESERVATION for partner
      tags:
      - Partner Caterings
      security:
      - jwt_auth: []
      parameters:
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old reservations
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create CATERING RESERVATION by tourist
      tags:
      - Tourist Caterings
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: string
                  format: datetime
                check_out:
                  type: string
                  format: datetime
                note:
                  type: string
                phone:
                  type: string
                full_name:
                  type: string
                catering_id:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
              - catering_id
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    get:
      summary: list rooms of accommodation for all
      tags:
      - Accommodation
      parameters:
      - name: check_in
        in: query
        schema:
          type: string
        description: Guests Check-in f.e. 2023-05-15
      - name: check_out
        in: query
        schema:
          type: string
        description: Guests Check-out f.e. 2023-05-17
      - name: number_of_peoples
        in: query
        schema:
          type: string
        description: Guests quantity
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    post:
      summary: create room of accommodation by partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - name
              - places
              - bed
              - description
              - quantity
              - price_per_night
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    get:
      summary: show room of accommodation for all
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
    put:
      summary: update room of accommodation by partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
    delete:
      summary: delete room of accommodation by partner
      tags:
      - Partner Accommodations
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
  "/api/v1/tours":
    get:
      summary: list TOUR - published for all
      tags:
      - Tour
      security:
      - jwt_auth: []
      parameters:
      - name: geolocations
        in: query
        schema:
          type: string
        description: Locality
      - name: user_id
        in: query
        schema:
          type: integer
        description: Filter on partner
      - name: status
        in: query
        schema:
          type: string
        description: 'Filter on status: unpublished/published'
      - name: archived
        in: query
        schema:
          type: string
        description: Archive of old tours
      responses:
        '200':
          description: successful
    post:
      summary: create new TOUR - for partner only
      tags:
      - Partner Tours
      description: Creates a new tour
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '201':
          description: successful created
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                seats:
                  type: integer
                price_per_one:
                  type: decimal
                time_start:
                  type: string
                time_end:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                user_id:
                  type: string
              required:
              - title
              - description
              - seats
              - address_owner
              - phone
              - email
              - price_per_one
              - user_id
              - reg_code
              - person
              - time_start
              - time_end
        required: true
  "/api/v1/tours/{id}":
    parameters:
    - name: id
      in: path
      description: tour id
      required: true
      schema:
        type: string
    get:
      summary: show TOUR - published for all
      tags:
      - Tour
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: 'update TOUR: status by admin: published/unpublished , other attr.
        by partner his own only'
      tags:
      - Partner Tours
      security:
      - jwt_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                seats:
                  type: integer
                price_per_one:
                  type: decimal
                time_start:
                  type: string
                time_end:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                address_owner:
                  type: string
                reg_code:
                  type: string
                person:
                  type: string
                status:
                  type: string
    delete:
      summary: delete TOUR - for admin all, for partner his own only
      tags:
      - Partner Tours
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Users Admin
      security:
      - jwt_auth: []
      parameters:
      - name: role
        in: query
        schema:
          type: string
        description: admin/partner/tourist
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: create user
      tags:
      - Users Tourist
      parameters: []
      responses:
        '201':
          description: successful created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      security:
      - jwt_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '404':
          description: not found
    delete:
      summary: delete user
      tags:
      - Users
      security:
      - jwt_auth: []
      responses:
        '200':
          description: no content
        '401':
          description: unauthorized
        '404':
          description: not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
- url: https://{ck_tour_Host}
  variables:
    ck_tour_Host:
      default: cktour.club
components:
  securitySchemes:
    jwt_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
