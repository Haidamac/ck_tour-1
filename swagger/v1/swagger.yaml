---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/accommodations":
    get:
      summary: list accommodations
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
    post:
      summary: create accommodation
      tags:
      - Accommodation
      description: Creates a new accommodation
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                kind:
                  type: string
                  enum:
                  - hotel
                  - hostel
                  - apartment
                  - greenhouse
              required:
              - name
              - description
              - address
              - phone
              - email
              - kind
        required: true
  "/api/v1/accommodations/{id}":
    parameters:
    - name: id
      in: path
      description: accommodation id
      required: true
      schema:
        type: string
    get:
      summary: show accommodation
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
    patch:
      summary: update accommodation
      tags:
      - Accommodation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                kind:
                  type: string
                  enum:
                  - hotel
                  - hostel
                  - apartment
                  - greenhouse
              required:
              - name
              - description
              - address
              - phone
              - email
              - kind
        required: true
    put:
      summary: update accommodation
      tags:
      - Accommodation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                kind:
                  type: string
                  enum:
                  - hotel
                  - hostel
                  - apartment
                  - greenhouse
              required:
              - name
              - description
              - address
              - phone
              - email
              - kind
        required: true
    delete:
      summary: delete accommodation
      tags:
      - Accommodation
      responses:
        '200':
          description: successful
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/amenities":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: room_id
      in: path
      description: room_id
      required: true
      schema:
        type: string
    post:
      summary: create amenity
      tags:
      - Amenity
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{room_id}/amenities/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show amenity
      tags:
      - Amenity
      responses:
        '200':
          description: successful
    patch:
      summary: update amenity
      tags:
      - Amenity
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
              required: false
    put:
      summary: update amenity
      tags:
      - Amenity
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conditioner:
                  type: boolean
                tv:
                  type: boolean
                refrigerator:
                  type: boolean
                kettle:
                  type: boolean
                mv_owen:
                  type: boolean
                hair_dryer:
                  type: boolean
                nice_view:
                  type: boolean
                inclusive:
                  type: boolean
              required: false
    delete:
      summary: delete amenity
      tags:
      - Amenity
      responses:
        '200':
          description: successful
  "/api/v1/auth/login":
    post:
      summary: authentication user
      tags:
      - Authentication
      description: authentication user
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
        required: true
  "/api/v1/users/{id}/bookings":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: list bookings
      tags:
      - Booking
      responses:
        '200':
          description: successful
    post:
      summary: create booking
      tags:
      - Booking
      description: Creates a new booking
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: date
                check_out:
                  type: date
                note:
                  type: text
                confirmation:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
        required: true
  "/api/v1/users/{id}/bookings/{id}":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    - booking: id
      in: path
      description: booking id
      required: true
      schema:
        type: string
    get:
      summary: show booking
      tags:
      - Booking
      responses:
        '200':
          description: successful
    patch:
      summary: update booking
      tags:
      - Booking
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: date
                check_out:
                  type: date
                note:
                  type: text
                confirmation:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
              - note
        required: true
    put:
      summary: update booking
      tags:
      - Booking
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_peoples:
                  type: integer
                check_in:
                  type: date
                check_out:
                  type: date
                note:
                  type: text
                confirmation:
                  type: integer
              required:
              - number_of_peoples
              - check_in
              - check_out
              - confirmation
        required: true
    delete:
      summary: delete booking
      tags:
      - Booking
      responses:
        '200':
          description: successful
  "/api/v1/accommodations/{accommodation_id}/coordinates":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    post:
      summary: create coordinate
      tags:
      - Coordinate
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
              required:
              - latitude
              - longitude
        required: true
  "/api/v1/accommodations/{accommodation_id}/coordinates/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show coordinate
      tags:
      - Coordinate
      responses:
        '200':
          description: successful
    patch:
      summary: update coordinate
      tags:
      - Coordinate
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
    put:
      summary: update coordinate
      tags:
      - Coordinate
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: string
                  format: decimal
                longitude:
                  type: string
                  format: decimal
    delete:
      summary: delete coordinate
      tags:
      - Coordinate
      responses:
        '200':
          description: successful
  "/api/v1/accommodations/{accommodation_id}/facilities":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    post:
      summary: create facility
      tags:
      - Facility
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
        required: true
  "/api/v1/accommodations/{accommodation_id}/facilities/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show facility
      tags:
      - Facility
      responses:
        '200':
          description: successful
    patch:
      summary: update facility
      tags:
      - Facility
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
              required: false
    put:
      summary: update facility
      tags:
      - Facility
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkin_start:
                  type: string
                  format: datetime
                checkin_end:
                  type: string
                  format: datetime
                checkout_start:
                  type: string
                  format: datetime
                checkout_end:
                  type: string
                  format: datetime
                credit_card:
                  type: boolean
                free_parking:
                  type: boolean
                wi_fi:
                  type: boolean
                breakfast:
                  type: boolean
                pets:
                  type: boolean
              required: false
    delete:
      summary: delete facility
      tags:
      - Facility
      responses:
        '200':
          description: successful
  "/api/v1/accommodations/{accommodation_id}/rooms":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    get:
      summary: list rooms
      tags:
      - Room
      parameters:
      - name: check_in
        in: query
        schema:
          type: string
        description: Date of check in
      - name: check_out
        in: query
        schema:
          type: string
        description: Date of check in
      - name: number_of_peoples
        in: query
        schema:
          type: string
        description: Number of peoples
      responses:
        '200':
          description: successful
    post:
      summary: create room
      tags:
      - Room
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
              required:
              - name
              - places
              - bed
              - description
              - quantity
              - price_per_night
        required: true
  "/api/v1/accommodations/{accommodation_id}/rooms/{id}":
    parameters:
    - name: accommodation_id
      in: path
      description: accommodation_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show room
      tags:
      - Room
      responses:
        '200':
          description: successful
    patch:
      summary: update room
      tags:
      - Room
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
              required: false
    put:
      summary: update room
      tags:
      - Room
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                places:
                  type: integer
                quantity:
                  type: integer
                description:
                  type: string
                bed:
                  type: string
                price_per_night:
                  type: integer
              required: false
    delete:
      summary: delete room
      tags:
      - Room
      responses:
        '200':
          description: successful
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - User
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - User
      description: Creates a new user
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - User
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
    put:
      summary: update user
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
        required: true
    delete:
      summary: delete user
      tags:
      - User
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
securityDefinitions:
  jwt:
    type: apiKey
    name: Authorization
    in: header
security:
  jwt: []
